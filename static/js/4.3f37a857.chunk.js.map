{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Dialogitem","className","s","dialog","active","id","name","Message","massage","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","Dialogs","dialogsPage","messagesElements","messages","map","m","message","dialogsElements","dialogs","d","Dialogsitem","Massages","writeMessage","values","addMessageActionCreator","newMessageText","compose","dispatch"],"mappings":"4NAIIA,EAA0B,SAACC,GAAD,MAAY,CACtCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,WAAD,CAAUC,GAAG,eAHT,GACXC,IAAML,WAUtC,OAH4BM,YAAQX,EAARW,CACxBL,K,oBChBRM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,aAAe,gC,6KCU1OC,EARI,SAACN,GAChB,OACI,qBAAKO,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAAST,GAAI,YAAaD,EAAMW,GAAhC,SAAqCX,EAAMY,U,kBCQxCC,EAVA,SAACb,GACZ,OACI,8BACI,qBAAKO,UAAWC,IAAEM,QAAlB,SAA4Bd,EAAMS,Y,gDCgCxCM,EAAcC,YAAiB,IAoB/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAlBL,SAAClB,GACpB,OACI,uBAAMoB,SAAUpB,EAAMqB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACIC,UAAWC,IACXC,SAAU,CAACC,IAAeX,GAC1BH,KAAK,iBACLe,YAAY,yBAGpB,8BACI,kDAUDC,EAlDC,SAAC5B,GACb,IAAIP,EAAQO,EAAM6B,YAMlB,IAAK7B,EAAMN,OAAQ,OAAO,cAAC,WAAD,CAAUO,GAAI,WAExC,IAAI6B,EAAmBrC,EAAMsC,SAASC,KAAI,SAACC,GAAD,OACtC,cAAC,EAAD,CAASxB,OAAQwB,EAAEC,aAEnBC,EAAkB1C,EAAM2C,QAAQJ,KAAI,SAACK,GAAD,OACpC,cAAC,EAAD,CAAYzB,KAAMyB,EAAEzB,KAAMD,GAAI0B,EAAE1B,QAEpC,OACI,sBAAKJ,UAAWC,IAAEoB,QAAlB,UACI,qBAAKrB,UAAWC,IAAE8B,YAAlB,SAAgCH,IAChC,qBAAK5B,UAAS,UAAKC,IAAE+B,SAAP,YAAmB/B,IAAEgC,cAAnC,SACI,8BAAMV,MAEV,cAACb,EAAD,CAAqBG,SAlBT,SAACqB,GACjBzC,EAAM0C,wBAAwBD,EAAOE,uBCG9BC,sBACXzC,aAfkB,SAACV,GACnB,MAAO,CACHoC,YAAapC,EAAMoC,gBAIF,SAACgB,GACtB,MAAO,CACHH,wBAAyB,SAACC,GACtBE,EAASH,YAAwBC,SAOzC/C,IAFWgD,CAGbhB","file":"static/js/4.3f37a857.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirect = connect(mapStateToPropsRedirect)(\r\n        RedirectComponent\r\n    );\r\n    return ConnectedAuthRedirect;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__28lLp\",\"dialog\":\"Dialogs_dialog__3fDtB\",\"massages\":\"Dialogs_massages__1h6Sv\",\"massage\":\"Dialogs_massage__3vBHD\",\"Dialogsitem\":\"Dialogs_Dialogsitem__1DOph\",\"active\":\"Dialogs_active__1LBVD\",\"writeMessage\":\"Dialogs_writeMessage__36x2U\"};","import s from \"./DialogItem.module.css\"\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dialogitem = (props) =>{\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={\"/Dialogs/\"+ props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogitem","import s from \"./Message.module.css\"\r\n\r\n\r\n\r\nconst Message =(props) =>{\r\n    return(\r\n        <div> \r\n            <div className={s.massage}>{props.dialog}</div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message","import s from \"./Dialogs.module.css\";\r\nimport Dialogitem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field } from \"redux-form\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControl/FormsControls\";\r\nimport {\r\n    requiredField,\r\n    maxLengthCreator,\r\n} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessageActionCreator(values.newMessageText);\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n    let messagesElements = state.messages.map((m) => (\r\n        <Message dialog={m.message} />\r\n    ));\r\n    let dialogsElements = state.dialogs.map((d) => (\r\n        <Dialogitem name={d.name} id={d.id} />\r\n    ));\r\n    return (\r\n        <div className={s.Dialogs}>\r\n            <div className={s.Dialogsitem}>{dialogsElements}</div>\r\n            <div className={`${s.Massages} ${s.writeMessage}`}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    validate={[requiredField, maxLength50]}\r\n                    name=\"newMessageText\"\r\n                    placeholder=\"Enter your message\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n    AddMessageForm\r\n);\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { addMessageActionCreator } from \"../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    };\r\n};\r\n\r\nlet MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessageActionCreator: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText));\r\n        },\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, MapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}