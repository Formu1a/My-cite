{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/Profileinfo/Profileinfo.module.css","components/My posts/MyPost.module.css","components/My posts/Post.module.css","components/Profile/Profile.module.css","components/My posts/Post.jsx","components/My posts/MyPost.jsx","components/My posts/MyPostsContainer.jsx","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/ProfileDataForm.jsx","components/Profile/Profileinfo/Profileinfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","post","bomb","src","alt","item","message","like","likeCounts","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","requiredField","MyPost","memo","postsElement","posts","map","p","id","values","addPost","newPostText","MyPostContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","error","profile","style","formSummaryError","placeholder","Input","type","Object","keys","contacts","key","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","Profileinfo","savePhoto","saveProfile","photo","target","files","length","photoA","photos","large","userPhoto","info","initialValues","formData","then","Profile","mainProfile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","compose","withRouter"],"mappings":"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","file":"static/js/3.702dd705.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirect = connect(mapStateToPropsRedirect)(\r\n        RedirectComponent\r\n    );\r\n    return ConnectedAuthRedirect;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profileinfo_content__2b-tT\",\"photo\":\"Profileinfo_photo__2wrpn\",\"photoA\":\"Profileinfo_photoA__i1oXR\",\"name\":\"Profileinfo_name__EkWiB\",\"info\":\"Profileinfo_info__3srNq\",\"contact\":\"Profileinfo_contact__2ORoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPost_item__1IJBD\",\"post\":\"MyPost_post__2odzb\",\"text\":\"MyPost_text__1Q3Io\",\"button\":\"MyPost_button__a77Mm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1BnS1\",\"post\":\"Post_post__hR0vM\",\"bomb\":\"Post_bomb__2gBNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainProfile\":\"Profile_mainProfile__2k_T-\"};","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={`  ${s.post} `}>\r\n            <img className={s.bomb} src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSpQV124qNcKGFXUBkF0TwjDJthgJGTgbBjVz7G7pvy2YtjmzAOt7LRE8sCpXEzdIQdTQo&usqp=CAU\" alt=\"\" />\r\n            <span className={s.item}>\r\n            {props.message }\r\n            </span>\r\n            <div className={s.like}>\r\n                <span>like</span> {props.likeCounts}\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n    \r\n}\r\nexport default Post;","import s from \"./MyPost.module.css\";\r\nimport Post from \"./Post\";\r\nimport React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport {\r\n    requiredField,\r\n    maxLengthCreator,\r\n} from \"../../utils/validators/validators\";\r\nimport { Textarea } from \"../common/FormsControl/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst addNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name=\"newPostText\"\r\n                    validate={[requiredField, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\r\n    addNewPostForm\r\n);\r\n\r\nconst MyPost = React.memo((props) => {\r\n    let postsElement = props.posts.map((p) => (\r\n        <Post key={p.id} message={p.message} likeCounts={p.likeCounts} />\r\n    ));\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.post}>\r\n                <h3>My Posts</h3>\r\n                <AddNewPostFormRedux onSubmit={addPost} />\r\n            </div>\r\n\r\n            <div className={s.item}>{postsElement}</div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPost;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../redux/profile-reducer\";\r\nimport MyPost from \"./MyPost\";\r\n\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    };\r\n};\r\n\r\nlet MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    };\r\n};\r\n\r\nconst MyPostContainer = connect(MapStateToProps, MapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode && (\r\n                <div>\r\n                    <b>Status:</b>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {props.status || \"No status\"}\r\n                    </span>\r\n                </div>\r\n            )}\r\n            {editMode && (\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deActivateEditMode}\r\n                        value={status}\r\n                    ></input>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Input, Textarea } from \"../../common/FormsControl/FormsControls\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport s from \"./Profileinfo.module.css\";\r\nimport style from \"../../common/FormsControl/formsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({\r\n    error,\r\n    handleSubmit,\r\n    status,\r\n    updateStatus,\r\n    profile,\r\n}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <button>Save</button>\r\n            </div>\r\n            <div>\r\n                {error && <div className={style.formSummaryError}>{error}</div>}\r\n            </div>\r\n\r\n            <div>\r\n                <div>\r\n                    <b>Full name</b>:\r\n                    <Field\r\n                        placeholder={\"Full name\"}\r\n                        name={\"fullName\"}\r\n                        validate={[]}\r\n                        component={Input}\r\n                    />\r\n                </div>\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                />\r\n                <b>Looking for a job</b>:\r\n                <Field\r\n                    name={\"lookingForAJob\"}\r\n                    validate={[]}\r\n                    component={Input}\r\n                    type={\"checkbox\"}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills</b>:\r\n                <Field\r\n                    placeholder={\"My professional skills\"}\r\n                    name={\"lookingForAJobDescription\"}\r\n                    validate={[]}\r\n                    component={Textarea}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <b>About me</b>:\r\n                <Field\r\n                    placeholder={\"About me\"}\r\n                    name={\"aboutMe\"}\r\n                    validate={[]}\r\n                    component={Textarea}\r\n                />\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>:\r\n                {Object.keys(profile.contacts).map((key) => {\r\n                    return (\r\n                        <div key={key} className={s.contact}>\r\n                            <b>\r\n                                {key}:{\" \"}\r\n                                <Field\r\n                                    placeholder={key}\r\n                                    name={\"contacts.\" + key}\r\n                                    validate={[]}\r\n                                    component={Input}\r\n                                />\r\n                            </b>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: \"editProfile\" })(\r\n    ProfileDataForm\r\n);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import Preloader from \"../../common/preloader/preloader\";\r\nimport s from \"./Profileinfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../assets/img/def.jpg\";\r\nimport React, { useState } from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst Profileinfo = ({\r\n    profile,\r\n    status,\r\n    updateStatus,\r\n    savePhoto,\r\n    isOwner,\r\n    saveProfile,\r\n}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />;\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.photo}>\r\n                <img\r\n                    src=\"https://weandthecolor.com/wp-content/uploads/2020/12/Japan-Nights-by-Aishy.jpg\"\r\n                    alt=\"none\"\r\n                />\r\n                {isOwner && (\r\n                    <input type={\"file\"} onChange={onMainPhotoSelected} />\r\n                )}\r\n            </div>\r\n\r\n            <div className={s.photoA}>\r\n                <img alt=\"none\" src={profile.photos.large || userPhoto} />\r\n            </div>\r\n\r\n            <div>\r\n                <h4 className={s.name}>{profile.fullName}</h4>\r\n            </div>\r\n\r\n            <div className={s.info}>\r\n                {editMode ? (\r\n                    <ProfileDataForm\r\n                        initialValues={profile}\r\n                        profile={profile}\r\n                        status={status}\r\n                        updateStatus={updateStatus}\r\n                        onSubmit={onSubmit}\r\n                    />\r\n                ) : (\r\n                    <ProfileData\r\n                        profile={profile}\r\n                        isOwner={isOwner}\r\n                        status={status}\r\n                        updateStatus={updateStatus}\r\n                        goToEditMode={() => {\r\n                            setEditMode(true);\r\n                        }}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({\r\n    profile,\r\n    status,\r\n    updateStatus,\r\n    isOwner,\r\n    goToEditMode,\r\n}) => {\r\n    return (\r\n        <div>\r\n            {isOwner && (\r\n                <div>\r\n                    <button onClick={goToEditMode}>Edit</button>\r\n                </div>\r\n            )}\r\n            <div>\r\n                <div>\r\n                    <b>Full name</b>:{profile.fullName}\r\n                </div>\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                />\r\n                <b>Looking for a job</b>:{profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob && (\r\n                <div>\r\n                    <b>My professional skills</b>:\r\n                    {profile.lookingForAJobDescription}\r\n                </div>\r\n            )}\r\n            <div>\r\n                <b>About me</b>:{profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>:\r\n                {Object.keys(profile.contacts).map((key) => {\r\n                    return (\r\n                        <Contact\r\n                            key={key}\r\n                            contactTitle={key}\r\n                            contactValue={profile.contacts[key]}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return (\r\n        <div className={s.contact}>\r\n            <b>{contactTitle}</b>:{contactValue}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profileinfo;\r\n","import MyPostContainer from \"../My posts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\";\r\nimport Profileinfo from \"./Profileinfo/Profileinfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.mainProfile}>\r\n            <Profileinfo\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile}\r\n            />\r\n\r\n            <MyPostContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n} from \"../redux/profile-reducer\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId)\r\n            this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile,\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}