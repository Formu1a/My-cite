{"version":3,"sources":["hoc/withAuthRedirect.js","components/My posts/MyPost.module.css","components/My posts/Post.module.css","components/Profile/Profile.module.css","components/Profile/Profileinfo/Profileinfo.module.css","components/My posts/Post.jsx","components/My posts/MyPost.jsx","components/My posts/MyPostsContainer.jsx","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/Profileinfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","post","bomb","src","alt","item","message","like","likeCounts","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","requiredField","MyPost","memo","postsElement","posts","map","p","values","addPost","newPostText","MyPostContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","Profileinfo","profile","photo","photoA","photos","large","fullName","info","aboutMe","Profile","mainProfile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","mapStateToProps","compose","withRouter"],"mappings":"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","file":"static/js/3.1facd289.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirect = connect(mapStateToPropsRedirect)(\r\n        RedirectComponent\r\n    );\r\n    return ConnectedAuthRedirect;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPost_item__1IJBD\",\"post\":\"MyPost_post__2odzb\",\"text\":\"MyPost_text__1Q3Io\",\"button\":\"MyPost_button__a77Mm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1BnS1\",\"post\":\"Post_post__hR0vM\",\"bomb\":\"Post_bomb__2gBNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainProfile\":\"Profile_mainProfile__2k_T-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profileinfo_content__2b-tT\",\"photo\":\"Profileinfo_photo__2wrpn\",\"photoA\":\"Profileinfo_photoA__i1oXR\",\"name\":\"Profileinfo_name__EkWiB\",\"info\":\"Profileinfo_info__3srNq\"};","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={`  ${s.post} `}>\r\n            <img className={s.bomb} src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSpQV124qNcKGFXUBkF0TwjDJthgJGTgbBjVz7G7pvy2YtjmzAOt7LRE8sCpXEzdIQdTQo&usqp=CAU\" alt=\"\" />\r\n            <span className={s.item}>\r\n            {props.message }\r\n            </span>\r\n            <div className={s.like}>\r\n                <span>like</span> {props.likeCounts}\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n    \r\n}\r\nexport default Post;","import s from \"./MyPost.module.css\";\r\nimport Post from \"./Post\";\r\nimport React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport {\r\n    requiredField,\r\n    maxLengthCreator,\r\n} from \"../../utils/validators/validators\";\r\nimport { Textarea } from \"../common/FormsControl/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst addNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name=\"newPostText\"\r\n                    validate={[requiredField, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\r\n    addNewPostForm\r\n);\r\n\r\nconst MyPost = React.memo((props) => {\r\n    let postsElement = props.posts.map((p) => (\r\n        <Post message={p.message} likeCounts={p.likeCounts} />\r\n    ));\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.post}>\r\n                <h3>My Posts</h3>\r\n                <AddNewPostFormRedux onSubmit={addPost} />\r\n            </div>\r\n\r\n            <div className={s.item}>{postsElement}</div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPost;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    addPostActionCreator,\r\n    updateNewPostTextActionCreator,\r\n} from \"../redux/profile-reducer\";\r\nimport MyPost from \"./MyPost\";\r\n\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    };\r\n};\r\n\r\nlet MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    };\r\n};\r\n\r\nconst MyPostContainer = connect(MapStateToProps, MapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode && (\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {props.status || \"No status\"}\r\n                    </span>\r\n                </div>\r\n            )}\r\n            {editMode && (\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deActivateEditMode}\r\n                        value={status}\r\n                    ></input>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import Preloader from \"../../common/preloader/preloader\";\r\nimport s from \"./Profileinfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst Profileinfo = ({ profile, status, updateStatus }) => {\r\n    if (!profile) {\r\n        return <Preloader />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.photo}>\r\n                <img\r\n                    src=\"https://weandthecolor.com/wp-content/uploads/2020/12/Japan-Nights-by-Aishy.jpg\"\r\n                    alt=\"none\"\r\n                ></img>\r\n            </div>\r\n\r\n            <div className={s.photoA}>\r\n                <img alt=\"none\" src={profile.photos.large}></img>\r\n            </div>\r\n\r\n            <div>\r\n                <h4 className={s.name}>{profile.fullName}</h4>\r\n            </div>\r\n\r\n            <div className={s.info}>\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                />\r\n                Date of Birth: 18 July\r\n                <br />\r\n                City: Minsk\r\n                <br />\r\n                Education: BNTU'24\r\n                <br />\r\n                {profile.aboutMe}\r\n                <br />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profileinfo;\r\n","import MyPostContainer from \"../My posts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\";\r\nimport Profileinfo from \"./Profileinfo/Profileinfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.mainProfile}>\r\n            <Profileinfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n\r\n            <MyPostContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n} from \"../redux/profile-reducer\";\r\nimport React from \"react\";\r\nimport {\r\n    Redirect,\r\n    withRouter,\r\n} from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\ncompose(\r\n    connect(mapStateToProps, { getUserProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}